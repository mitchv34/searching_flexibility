
. 
. display "{hline 80}"
--------------------------------------------------------------------------------

. display "WFH IMPUTATION - VALIDATION AND CALIBRATION"
WFH IMPUTATION - VALIDATION AND CALIBRATION

. display "{hline 80}"
--------------------------------------------------------------------------------

. 
. /*
> ==============================================================================
> LOAD IMPUTED DATASET
> ==============================================================================
> */
. 
. display ""


. display "Loading imputed dataset for validation..."
Loading imputed dataset for validation...

. display "{hline 45}"
---------------------------------------------

. 
. // Load the dataset with imputed WFH shares
. use "output/acs_with_imputed_wfh_three_part.dta", clear

. 
. // Display basic info about the dataset
. display ""


. display "Dataset summary:"
Dataset summary:

. describe

Contains data from output/acs_with_imputed_wfh_three_part.dta
 Observations:     2,045,735                  
    Variables:            18                  29 Jul 2025 15:33
------------------------------------------------------------------------------------------------------------------------
Variable      Storage   Display    Value
    name         type    format    label      Variable label
------------------------------------------------------------------------------------------------------------------------
unique_person~d str17   %17s                  
occupation_cl~n byte    %8.0g                 
work_industry   byte    %8.0g                 
education_s     byte    %8.0g                 
agebin          byte    %8.0g                 
gender          byte    %8.0g                 
race_ethnicit~s byte    %8.0g                 
censusdivision  byte    %8.0g                 
year            int     %8.0g                 
wfh             byte    %8.0g                 
p_remote_any    float   %9.0g                 Predicted P(wfh_share > 0) from hurdle model
p_full_remote~d float   %9.0g                 Predicted P(wfh_share = 1 | wfh_share > 0)
alpha_hybrid_~d float   %9.0g                 Predicted E[wfh_share | 0 < wfh_share < 1]
u1              float   %9.0g                 Random draw for hurdle decision
u2              float   %9.0g                 Random draw for top corner decision
alpha_final     float   %9.0g                 Final Imputed WFH Share (3-Part Model)
imputation_me~d str16   %16s                  Method used for WFH imputation
imputation_date float   %td                   Date of imputation
------------------------------------------------------------------------------------------------------------------------
Sorted by: 

. display "Total observations: " _N
Total observations: 2045735

. 
. // Check required variables exist
. local required_vars "alpha_final p_remote_any p_full_remote_cond alpha_hybrid_pred wfh"

. local missing_vars ""

. 
. foreach var of local required_vars {
  2.     capture confirm variable `var'
  3.     if _rc != 0 {
  4.         local missing_vars "`missing_vars' `var'"
  5.     }
  6. }

. 
. if "`missing_vars'" != "" {
.     display "ERROR: Missing required variables: `missing_vars'"
.     display "Please ensure the three-part model has been run and saved properly."
.     exit 198
. }

. 
. display "✓ All required variables found"
✓ All required variables found

. 
. /*
> ==============================================================================
> VALIDATION AND CALIBRATION USING ACS WFH INDICATOR
> ==============================================================================
> */
. 
. display ""


. display "{hline 80}"
--------------------------------------------------------------------------------

. display "VALIDATION AND CALIBRATION USING ACS WFH INDICATOR"
VALIDATION AND CALIBRATION USING ACS WFH INDICATOR

. display "{hline 80}"
--------------------------------------------------------------------------------

. 
. // Check if WFH validation variable exists
. capture confirm variable wfh

. if _rc == 0 {
.     display "✓ WFH validation indicator found - proceeding with validation"
✓ WFH validation indicator found - proceeding with validation
.     
.     // Count observations with non-missing WFH data
.     count if !missing(wfh)
  2,045,735
.     local wfh_obs = r(N)
.     display "Observations with WFH data available: " `wfh_obs' " of " _N " (" %4.1f `wfh_obs'/_N*100 "%)"
Observations with WFH data available: 2045735 of 2045735 (100.0%)
.     
.     if `wfh_obs' > 0 {
.         /*
>         ==============================================================================
>         VALIDATION STEP 1: COMPARE MEAN IMPUTED ALPHA BY ACTUAL WFH STATUS
>         ==============================================================================
>         */
.         
.         display ""

.         display "VALIDATION STEP 1: Comparing Mean Imputed Alpha by Actual WFH Status"
VALIDATION STEP 1: Comparing Mean Imputed Alpha by Actual WFH Status
.         display "{hline 70}"
----------------------------------------------------------------------
.         
.         // Summary table - use tabstat for compatibility
.         tabstat alpha_final, by(wfh) statistics(mean count) nototal

Summary for variables: alpha_final
Group variable: wfh 

     wfh |      Mean         N
---------+--------------------
       0 |  .2865025   1693951
       1 |  .4032514    351784
------------------------------
.         
.         // Statistical test
.         display ""

.         display "Statistical test for difference in means:"
Statistical test for difference in means:
.         ttest alpha_final, by(wfh)

Two-sample t test with equal variances
------------------------------------------------------------------------------
   Group |     Obs        Mean    Std. err.   Std. dev.   [95% conf. interval]
---------+--------------------------------------------------------------------
       0 | 1693951    .2865025    .0002998    .3902142    .2859148    .2870901
       1 | 351,784    .4032514    .0006862    .4069773    .4019065    .4045963
---------+--------------------------------------------------------------------
Combined | 2045735    .3065786    .0002766    .3956082    .3060365    .3071207
---------+--------------------------------------------------------------------
    diff |            -.116749    .0007284               -.1181767   -.1153212
------------------------------------------------------------------------------
    diff = mean(0) - mean(1)                                      t = -1.6e+02
H0: diff = 0                                     Degrees of freedom =  2.0e+06

    Ha: diff < 0                 Ha: diff != 0                 Ha: diff > 0
 Pr(T < t) = 0.0000         Pr(|T| > |t|) = 0.0000          Pr(T > t) = 1.0000
.         
.         /*
>         ==============================================================================
>         VALIDATION STEP 2: PLOT DISTRIBUTIONS BY WFH STATUS
>         ==============================================================================
>         */
.         
.         display ""

.         display "VALIDATION STEP 2: Creating distribution plots by WFH status..."
VALIDATION STEP 2: Creating distribution plots by WFH status...
.         
.         // Kernel density plot
.         twoway (kdensity alpha_final if wfh==0, legend(label(1 "Did Not WFH (wfh=0)"))) ///
>                (kdensity alpha_final if wfh==1, legend(label(2 "Did WFH (wfh=1)"))), ///
>                title("Distribution of Imputed WFH Share by Actual WFH Status", size(medium)) ///
>                xtitle("Imputed WFH Share (alpha_final)") ytitle("Density") ///
>                note("Source: ACS data with 3-part model imputation") ///
>                scheme(s1color)
.                
.         graph export "output/validation_alpha_by_wfh_status.png", replace width(800) height(600)
file output/validation_alpha_by_wfh_status.png saved as PNG format
.         display "✓ Saved: output/validation_alpha_by_wfh_status.png"
✓ Saved: output/validation_alpha_by_wfh_status.png
.         
.         /*
>         ==============================================================================
>         VALIDATION STEP 3: ROC ANALYSIS OF PREDICTIVE POWER
>         ==============================================================================
>         */
.         
.         display ""

.         display "VALIDATION STEP 3: ROC Analysis of Hurdle Model's Predictive Power"
VALIDATION STEP 3: ROC Analysis of Hurdle Model's Predictive Power
.         display "{hline 65}"
-----------------------------------------------------------------
.         
.         // ROC analysis using sample (faster alternative)
.         display "Performing ROC analysis using 10% sample (faster for large dataset)..."
Performing ROC analysis using 10% sample (faster for large dataset)...
.         preserve
.             sample 10
(1,841,161 observations deleted)
.             display "Sample size for ROC analysis: " _N " observations"
Sample size for ROC analysis: 204574 observations
.             roctab wfh p_remote_any, summary

                      ROC                     Asymptotic normal  
           Obs       area     Std. err.      [95% conf. interval]
     ------------------------------------------------------------
       204,574     0.7350       0.0014        0.73213     0.73779
.             local auc_sample = r(area)
.         restore
.         display "✓ Finished ROC analysis on sample - AUC: " %6.4f `auc_sample'
✓ Finished ROC analysis on sample - AUC: 0.7350
.         
.         // Create ROC graph using a random sample (faster)
.         display ""

.         display "Creating ROC curve graph using 10% random sample..."
Creating ROC curve graph using 10% random sample...
.         preserve
.             // Use 10% random sample for graphing
.             sample 10
(1,841,161 observations deleted)
.             display "Sample size for ROC graph: " _N " observations"
Sample size for ROC graph: 204574 observations
.             
.             // Create ROC graph using logistic regression
.             quietly logistic wfh p_remote_any
.             lroc, title("ROC Curve: Predicting Actual WFH from Model Probabilities") ///
>                   subtitle("Based on 10% random sample of ACS data") ///
>                   note("Sample-based analysis for computational efficiency") ///
>                   scheme(s1color)

Logistic model for wfh

Number of observations =   204574
Area under ROC curve   =   0.7329
.         
.             graph export "output/validation_roc_curve.png", replace width(800) height(600)
file output/validation_roc_curve.png saved as PNG format
.             display "✓ Saved: output/validation_roc_curve.png"
✓ Saved: output/validation_roc_curve.png
.         restore
.         
.         // Alternative: Use roctab with graph on sample
.         display ""

.         display "Creating additional ROC analysis with graph using sample..."
Creating additional ROC analysis with graph using sample...
.         preserve
.             sample 5  // Use 5% sample for roctab graph
(1,943,448 observations deleted)
.             display "Sample size for roctab graph: " _N " observations"
Sample size for roctab graph: 102287 observations
.             
.             roctab wfh p_remote_any, graph ///
>                    title("ROC Analysis: Model Predictions vs Actual WFH") ///
>                    subtitle("Based on 5% random sample") ///
>                    scheme(s1color)
.         
.             graph export "output/validation_roc_curve_roctab.png", replace width(800) height(600)
file output/validation_roc_curve_roctab.png saved as PNG format
.             display "✓ Saved: output/validation_roc_curve_roctab.png"
✓ Saved: output/validation_roc_curve_roctab.png
.         restore
.         
.         display "✓ ROC analysis complete - both summary statistics and graphs created"
✓ ROC analysis complete - both summary statistics and graphs created
.         
.         /*
>         ==============================================================================
>         CALIBRATION STEP 1: CALCULATE TARGET PROPORTION FROM ACS
>         ==============================================================================
>         */
.         
.         display ""

.         display "CALIBRATION STEP 1: Calculating Target Proportion from ACS WFH Indicator"
CALIBRATION STEP 1: Calculating Target Proportion from ACS WFH Indicator
.         display "{hline 70}"
----------------------------------------------------------------------
.         
.         quietly summarize wfh
.         local target_p_remote_any = r(mean)
.         display "Target proportion for any remote work (from ACS): " %6.4f `target_p_remote_any'
Target proportion for any remote work (from ACS): 0.1720
.         
.         /*
>         ==============================================================================
>         CALIBRATION STEP 2: FIND THE CALIBRATION CUTOFF VALUE
>         ==============================================================================
>         */
.         
.         display ""

.         display "CALIBRATION STEP 2: Finding the calibration cutoff value..."
CALIBRATION STEP 2: Finding the calibration cutoff value...
.         
.         // Calculate the percentile we need
.         local p_cutoff = (1 - `target_p_remote_any') * 100
.         display "To match target, we need to set the cutoff at the " %4.1f `p_cutoff' "th percentile."
To match target, we need to set the cutoff at the 82.8th percentile.
.         
.         // Find the cutoff value
.         quietly summarize p_remote_any, detail
.         
.         // Get the specific percentile (use _pctile for exact percentile)
.         _pctile p_remote_any, p(`p_cutoff')
.         local p_cutoff_value = r(r1)
.         display "The cutoff value is p_remote_any = " %6.4f `p_cutoff_value'
The cutoff value is p_remote_any = 0.6470
.         
.         /*
>         ==============================================================================
>         CALIBRATION STEP 3: IMPLEMENT THE CALIBRATED IMPUTATION
>         ==============================================================================
>         */
.         
.         display ""

.         display "CALIBRATION STEP 3: Implementing the calibrated imputation..."
CALIBRATION STEP 3: Implementing the calibrated imputation...
.         display "{hline 60}"
------------------------------------------------------------
.         
.         // Set seed for reproducibility
.         set seed 12345
.         
.         // Drop existing calibration variables if they exist
.         capture drop u2_calib alpha_final_calibrated
.         
.         gen u2_calib = runiform()
.         
.         // Initialize the calibrated variable
.         gen alpha_final_calibrated = .
(2,045,735 missing values generated)
.         label variable alpha_final_calibrated "Final Imputed WFH Share (Calibrated to ACS)"
.         
.         // Stage 1 (Calibrated): Assign in-person based on the new cutoff
.         replace alpha_final_calibrated = 0 if p_remote_any <= `p_cutoff_value'
(1,694,035 real changes made)
.         
.         // Stage 2 (Unchanged): For the rest, decide between hybrid and full remote
.         replace alpha_final_calibrated = 1 if u2_calib <= p_full_remote_cond & missing(alpha_final_calibrated)
(148,403 real changes made)
.         
.         // Stage 3 (Unchanged): Assign the interior prediction to the remaining hybrid workers
.         replace alpha_final_calibrated = alpha_hybrid_pred if missing(alpha_final_calibrated)
(203,297 real changes made)
.         
.         /*
>         ==============================================================================
>         CALIBRATION STEP 4: VERIFY THE CALIBRATION
>         ==============================================================================
>         */
.         
.         display ""

.         display "CALIBRATION STEP 4: Verifying the calibration..."
CALIBRATION STEP 4: Verifying the calibration...
.         display "{hline 50}"
--------------------------------------------------
.         
.         // Check the calibrated share
.         count if alpha_final_calibrated > 0
  351,700
.         local calibrated_share = r(N) / _N
.         display "Share of any remote work in calibrated data: " %6.4f `calibrated_share'
Share of any remote work in calibrated data: 0.1719
.         display "Target share was: " %6.4f `target_p_remote_any'
Target share was: 0.1720
.         display "Difference: " %6.4f abs(`calibrated_share' - `target_p_remote_any')
Difference: 0.0000
.         
.         // Summary statistics
.         display ""

.         display "Summary of calibrated variable:"
Summary of calibrated variable:
.         summarize alpha_final_calibrated, detail

         Final Imputed WFH Share (Calibrated to ACS)
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs           2,045,735
25%            0              0       Sum of wgt.   2,045,735

50%            0                      Mean           .1187696
                        Largest       Std. dev.      .2828365
75%            0              1
90%     .4814393              1       Variance       .0799965
95%            1              1       Skewness       2.317951
99%            1              1       Kurtosis       7.091891
.         
.         /*
>         ==============================================================================
>         ADDITIONAL VALIDATION: COMPARE ORIGINAL VS CALIBRATED
>         ==============================================================================
>         */
.         
.         display ""

.         display "ADDITIONAL VALIDATION: Comparing Original vs Calibrated Imputations"
ADDITIONAL VALIDATION: Comparing Original vs Calibrated Imputations
.         display "{hline 65}"
-----------------------------------------------------------------
.         
.         // Correlation between original and calibrated
.         corr alpha_final alpha_final_calibrated
(obs=2,045,735)

             | alpha_~l alph~ted
-------------+------------------
 alpha_final |   1.0000
alpha_fina~d |   0.2882   1.0000

.         
.         // Distribution comparison by WFH status
.         display ""

.         display "Mean alpha by WFH status - Original vs Calibrated:"
Mean alpha by WFH status - Original vs Calibrated:
.         display "WFH Status | Original Mean | Calibrated Mean"
WFH Status | Original Mean | Calibrated Mean
.         display "{hline 40}"
----------------------------------------
.         
.         quietly summarize alpha_final if wfh == 0
.         local orig_mean_0 = r(mean)
.         quietly summarize alpha_final_calibrated if wfh == 0
.         local calib_mean_0 = r(mean)
.         display "WFH = 0    |    " %8.4f `orig_mean_0' "   |     " %8.4f `calib_mean_0'
WFH = 0    |      0.2865   |       0.0865
.         
.         quietly summarize alpha_final if wfh == 1
.         local orig_mean_1 = r(mean)
.         quietly summarize alpha_final_calibrated if wfh == 1
.         local calib_mean_1 = r(mean)
.         display "WFH = 1    |    " %8.4f `orig_mean_1' "   |     " %8.4f `calib_mean_1'
WFH = 1    |      0.4033   |       0.2742
.         
.         // Create comparison plot
.         twoway (kdensity alpha_final, legend(label(1 "Original Imputation"))) ///
>                (kdensity alpha_final_calibrated, legend(label(2 "Calibrated Imputation"))), ///
>                title("Comparison of Original vs Calibrated Imputations", size(medium)) ///
>                xtitle("Imputed WFH Share") ytitle("Density") ///
>                note("Calibrated version matches ACS aggregate WFH share") ///
>                scheme(s1color)
.                
.         graph export "output/comparison_original_vs_calibrated.png", replace width(800) height(600)
file output/comparison_original_vs_calibrated.png saved as PNG format
.         display "✓ Saved: output/comparison_original_vs_calibrated.png"
✓ Saved: output/comparison_original_vs_calibrated.png
.         
.         // Distribution breakdown for calibrated version
.         display ""

.         display "CALIBRATED DISTRIBUTION BREAKDOWN:"
CALIBRATED DISTRIBUTION BREAKDOWN:
.         
.         count if alpha_final_calibrated == 0
  1,694,035
.         local zeros_calib = r(N)
.         display "Fully in-person (alpha = 0): " `zeros_calib' " observations (" %4.1f `zeros_calib'/_N*100 "%)"
Fully in-person (alpha = 0): 1694035 observations (82.8%)
.         
.         count if alpha_final_calibrated == 1  
  148,403
.         local ones_calib = r(N)
.         display "Fully remote (alpha = 1): " `ones_calib' " observations (" %4.1f `ones_calib'/_N*100 "%)"
Fully remote (alpha = 1): 148403 observations ( 7.3%)
.         
.         count if alpha_final_calibrated > 0 & alpha_final_calibrated < 1
  203,297
.         local hybrid_calib = r(N)
.         display "Hybrid (0 < alpha < 1): " `hybrid_calib' " observations (" %4.1f `hybrid_calib'/_N*100 "%)"
Hybrid (0 < alpha < 1): 203297 observations ( 9.9%)
.         
.         /*
>         ==============================================================================
>         DETAILED VALIDATION ANALYSIS
>         ==============================================================================
>         */
.         
.         display ""

.         display "DETAILED VALIDATION ANALYSIS"
DETAILED VALIDATION ANALYSIS
.         display "{hline 35}"
-----------------------------------
.         
.         // Cross-tabulation of imputed categories vs actual WFH
.         display ""

.         display "Cross-tabulation: Imputed categories vs Actual WFH"
Cross-tabulation: Imputed categories vs Actual WFH
.         
.         // Create categorical version of alpha_final for crosstab
.         gen alpha_cat = "In-person" if alpha_final == 0
(879,507 missing values generated)
.         replace alpha_cat = "Hybrid" if alpha_final > 0 & alpha_final < 1
(463,818 real changes made)
.         replace alpha_cat = "Full Remote" if alpha_final == 1
variable alpha_cat was str9 now str11
(415,689 real changes made)
.         
.         tab alpha_cat wfh, row col

+-------------------+
| Key               |
|-------------------|
|     frequency     |
|  row percentage   |
| column percentage |
+-------------------+

            |          wfh
  alpha_cat |         0          1 |     Total
------------+----------------------+----------
Full Remote |   323,006     92,683 |   415,689 
            |     77.70      22.30 |    100.00 
            |     19.07      26.35 |     20.32 
------------+----------------------+----------
     Hybrid |   357,363    106,455 |   463,818 
            |     77.05      22.95 |    100.00 
            |     21.10      30.26 |     22.67 
------------+----------------------+----------
  In-person | 1,013,582    152,646 | 1,166,228 
            |     86.91      13.09 |    100.00 
            |     59.84      43.39 |     57.01 
------------+----------------------+----------
      Total | 1,693,951    351,784 | 2,045,735 
            |     82.80      17.20 |    100.00 
            |    100.00     100.00 |    100.00 
.         
.         // Calibrated version
.         gen alpha_cat_calib = "In-person" if alpha_final_calibrated == 0
(351,700 missing values generated)
.         replace alpha_cat_calib = "Hybrid" if alpha_final_calibrated > 0 & alpha_final_calibrated < 1
(203,297 real changes made)
.         replace alpha_cat_calib = "Full Remote" if alpha_final_calibrated == 1
variable alpha_cat_calib was str9 now str11
(148,403 real changes made)
.         
.         display ""

.         display "Cross-tabulation: Calibrated categories vs Actual WFH"
Cross-tabulation: Calibrated categories vs Actual WFH
.         tab alpha_cat_calib wfh, row col

+-------------------+
| Key               |
|-------------------|
|     frequency     |
|  row percentage   |
| column percentage |
+-------------------+

alpha_cat_c |          wfh
       alib |         0          1 |     Total
------------+----------------------+----------
Full Remote |    88,888     59,515 |   148,403 
            |     59.90      40.10 |    100.00 
            |      5.25      16.92 |      7.25 
------------+----------------------+----------
     Hybrid |   124,283     79,014 |   203,297 
            |     61.13      38.87 |    100.00 
            |      7.34      22.46 |      9.94 
------------+----------------------+----------
  In-person | 1,480,780    213,255 | 1,694,035 
            |     87.41      12.59 |    100.00 
            |     87.42      60.62 |     82.81 
------------+----------------------+----------
      Total | 1,693,951    351,784 | 2,045,735 
            |     82.80      17.20 |    100.00 
            |    100.00     100.00 |    100.00 
.         
.         // Calculate classification accuracy metrics
.         display ""

.         display "CLASSIFICATION ACCURACY METRICS:"
CLASSIFICATION ACCURACY METRICS:
.         display "{hline 40}"
----------------------------------------
.         
.         // For original imputation (treating alpha > 0 as "remote")
.         gen imputed_remote = (alpha_final > 0)
.         gen calibrated_remote = (alpha_final_calibrated > 0)
.         
.         // Calculate accuracy, sensitivity, specificity
.         tab imputed_remote wfh, row col

+-------------------+
| Key               |
|-------------------|
|     frequency     |
|  row percentage   |
| column percentage |
+-------------------+

imputed_re |          wfh
      mote |         0          1 |     Total
-----------+----------------------+----------
         0 | 1,013,582    152,646 | 1,166,228 
           |     86.91      13.09 |    100.00 
           |     59.84      43.39 |     57.01 
-----------+----------------------+----------
         1 |   680,369    199,138 |   879,507 
           |     77.36      22.64 |    100.00 
           |     40.16      56.61 |     42.99 
-----------+----------------------+----------
     Total | 1,693,951    351,784 | 2,045,735 
           |     82.80      17.20 |    100.00 
           |    100.00     100.00 |    100.00 
.         
.         display ""

.         display "ORIGINAL IMPUTATION CLASSIFICATION METRICS:"
ORIGINAL IMPUTATION CLASSIFICATION METRICS:
.         quietly tab imputed_remote wfh
.         local total = r(N)
.         local true_pos = r(r21)    // predicted remote, actually remote
.         local false_pos = r(r12)   // predicted remote, actually not remote  
.         local true_neg = r(r11)    // predicted not remote, actually not remote
.         local false_neg = r(r22)   // predicted not remote, actually remote
.         
.         local accuracy = (`true_pos' + `true_neg') / `total'
.         local sensitivity = `true_pos' / (`true_pos' + `false_neg')
.         local specificity = `true_neg' / (`true_neg' + `false_pos')
.         local precision = `true_pos' / (`true_pos' + `false_pos')
.         
.         display "• Accuracy: " %6.4f `accuracy'
• Accuracy:      .
.         display "• Sensitivity (True Positive Rate): " %6.4f `sensitivity'
• Sensitivity (True Positive Rate):      .
.         display "• Specificity (True Negative Rate): " %6.4f `specificity'
• Specificity (True Negative Rate):      .
.         display "• Precision (Positive Predictive Value): " %6.4f `precision'
• Precision (Positive Predictive Value):      .
.         
.         display ""

.         display "CALIBRATED IMPUTATION CLASSIFICATION METRICS:"
CALIBRATED IMPUTATION CLASSIFICATION METRICS:
.         quietly tab calibrated_remote wfh
.         local total_c = r(N)
.         local true_pos_c = r(r21)
.         local false_pos_c = r(r12)
.         local true_neg_c = r(r11)
.         local false_neg_c = r(r22)
.         
.         local accuracy_c = (`true_pos_c' + `true_neg_c') / `total_c'
.         local sensitivity_c = `true_pos_c' / (`true_pos_c' + `false_neg_c')
.         local specificity_c = `true_neg_c' / (`true_neg_c' + `false_pos_c')
.         local precision_c = `true_pos_c' / (`true_pos_c' + `false_pos_c')
.         
.         display "• Accuracy: " %6.4f `accuracy_c'
• Accuracy:      .
.         display "• Sensitivity (True Positive Rate): " %6.4f `sensitivity_c'
• Sensitivity (True Positive Rate):      .
.         display "• Specificity (True Negative Rate): " %6.4f `specificity_c'
• Specificity (True Negative Rate):      .
.         display "• Precision (Positive Predictive Value): " %6.4f `precision_c'
• Precision (Positive Predictive Value):      .
.         
.         /*
>         ==============================================================================
>         SAVE RESULTS WITH VALIDATION VARIABLES
>         ==============================================================================
>         */
.         
.         display ""

.         display "SAVING RESULTS WITH VALIDATION AND CALIBRATION..."
SAVING RESULTS WITH VALIDATION AND CALIBRATION...
.         display "{hline 55}"
-------------------------------------------------------
.         
.         // Add validation metadata (drop if they exist first)
.         capture drop validation_performed target_wfh_share calibration_cutoff
.         
.         gen validation_performed = 1
.         label variable validation_performed "Whether WFH validation was performed"
.         
.         gen target_wfh_share = `target_p_remote_any'
.         label variable target_wfh_share "Target WFH share from ACS validation data"
.         
.         gen calibration_cutoff = `p_cutoff_value'
.         label variable calibration_cutoff "Cutoff value used for calibration"
.         
.         // Save updated dataset
.         save "output/acs_with_imputed_wfh_validated.dta", replace
file output/acs_with_imputed_wfh_validated.dta saved
.         display "✓ Saved: output/acs_with_imputed_wfh_validated.dta"
✓ Saved: output/acs_with_imputed_wfh_validated.dta
.         
.         export delimited "output/acs_with_imputed_wfh_validated.csv", replace
file output/acs_with_imputed_wfh_validated.csv saved
.         display "✓ Saved: output/acs_with_imputed_wfh_validated.csv"
✓ Saved: output/acs_with_imputed_wfh_validated.csv
.         
.         /*
>         ==============================================================================
>         VALIDATION AND CALIBRATION SUMMARY
>         ==============================================================================
>         */
.         
.         display ""

.         display "{hline 80}"
--------------------------------------------------------------------------------
.         display "VALIDATION AND CALIBRATION SUMMARY"
VALIDATION AND CALIBRATION SUMMARY
.         display "{hline 80}"
--------------------------------------------------------------------------------
.         
.         display ""

.         display "VALIDATION RESULTS:"
VALIDATION RESULTS:
.         quietly ttest alpha_final, by(wfh)
.         local mean_diff = r(mu_2) - r(mu_1)
.         local p_value = r(p)
.         display "• Mean difference in imputed alpha (WFH=1 vs WFH=0): " %6.4f `mean_diff'
• Mean difference in imputed alpha (WFH=1 vs WFH=0): 0.1167
.         display "• P-value for difference: " %6.4f `p_value'
• P-value for difference: 0.0000
.         display "• ROC Area Under Curve (AUC - from 10% sample): " %6.4f `auc_sample'
• ROC Area Under Curve (AUC - from 10% sample): 0.7350
.         
.         display ""

.         display "CALIBRATION RESULTS:"
CALIBRATION RESULTS:
.         // Calculate original any-remote share
.         count if alpha_final > 0
  879,507
.         local original_any_remote = r(N) / _N
.         display "• Original any-remote share: " %6.4f `original_any_remote'
• Original any-remote share: 0.4299
.         display "• Target any-remote share (ACS): " %6.4f `target_p_remote_any'
• Target any-remote share (ACS): 0.1720
.         display "• Calibrated any-remote share: " %6.4f `calibrated_share'
• Calibrated any-remote share: 0.1719
.         display "• Calibration accuracy: " %6.4f (1 - abs(`calibrated_share' - `target_p_remote_any'))
• Calibration accuracy: 1.0000
.         
.         display ""

.         display "CLASSIFICATION PERFORMANCE:"
CLASSIFICATION PERFORMANCE:
.         display "• Original model accuracy: " %6.4f `accuracy'
• Original model accuracy:      .
.         display "• Calibrated model accuracy: " %6.4f `accuracy_c'
• Calibrated model accuracy:      .
.         display "• Original model AUC: " %6.4f `auc_sample'
• Original model AUC: 0.7350
.         
.         display ""

.         display "OUTPUT FILES WITH VALIDATION:"
OUTPUT FILES WITH VALIDATION:
.         display "• output/acs_with_imputed_wfh_validated.dta (main output with validation)"
• output/acs_with_imputed_wfh_validated.dta (main output with validation)
.         display "• output/acs_with_imputed_wfh_validated.csv (CSV version)"
• output/acs_with_imputed_wfh_validated.csv (CSV version)
.         display "• output/validation_alpha_by_wfh_status.png (distribution comparison)"
• output/validation_alpha_by_wfh_status.png (distribution comparison)
.         display "• output/validation_roc_curve.png (ROC analysis)"
• output/validation_roc_curve.png (ROC analysis)
.         display "• output/comparison_original_vs_calibrated.png (calibration comparison)"
• output/comparison_original_vs_calibrated.png (calibration comparison)
.         display "• output/wfh_validation_calibration_log.log (this log file)"
• output/wfh_validation_calibration_log.log (this log file)
.         
.     }
.     else {
.         display "ERROR: No observations with valid WFH data found"
.         display "Skipping validation and calibration steps"
.     }
. }

. else {
.     display "WARNING: WFH validation variable not found in dataset"
.     display "Skipping validation and calibration steps"
.     display "This is expected if validation data is not available"
. }

. 
. /*
> ==============================================================================
> WORK ARRANGEMENT STATISTICS - ORIGINAL VS CALIBRATED IMPUTATION - WEIGHTED
> ==============================================================================
> */
. 
. display ""


. display "WORK ARRANGEMENT STATISTICS - ORIGINAL VS CALIBRATED IMPUTATION - WEIGHTED"
WORK ARRANGEMENT STATISTICS - ORIGINAL VS CALIBRATED IMPUTATION - WEIGHTED

. display "{hline 80}"
--------------------------------------------------------------------------------

. 
. // Check if weights exist for ACS data
. capture confirm variable perwt

. if _rc == 0 {
.     local weight_opt "perwt"
.     display "Using ACS person weights (perwt) for validation statistics"
. }

. else {
.     local weight_opt ""
.     display "No weights available for ACS data - using unweighted statistics"
No weights available for ACS data - using unweighted statistics
. }

. 
. // Original imputation statistics (weighted)
. display ""


. display "ORIGINAL IMPUTATION STATISTICS (WEIGHTED):"
ORIGINAL IMPUTATION STATISTICS (WEIGHTED):

. display "{hline 45}"
---------------------------------------------

. 
. if "`weight_opt'" != "" {
.     // Weighted counts using summarize
.     quietly summarize `weight_opt' if alpha_final == 0
.     local orig_inperson = r(sum)
.     quietly summarize `weight_opt'
.     local total_weighted = r(sum)
.     local orig_pct_inperson = (`orig_inperson' / `total_weighted') * 100
. 
.     quietly summarize `weight_opt' if alpha_final > 0 & alpha_final < 1
.     local orig_hybrid = r(sum)
.     local orig_pct_hybrid = (`orig_hybrid' / `total_weighted') * 100
. 
.     quietly summarize `weight_opt' if alpha_final == 1
.     local orig_remote = r(sum)
.     local orig_pct_remote = (`orig_remote' / `total_weighted') * 100
. }

. else {
.     // Unweighted counts
.     count if alpha_final == 0
  1,166,228
.     local orig_inperson = r(N)
.     local total_weighted = _N
.     local orig_pct_inperson = (`orig_inperson' / `total_weighted') * 100
. 
.     count if alpha_final > 0 & alpha_final < 1
  463,818
.     local orig_hybrid = r(N)
.     local orig_pct_hybrid = (`orig_hybrid' / `total_weighted') * 100
. 
.     count if alpha_final == 1
  415,689
.     local orig_remote = r(N)
.     local orig_pct_remote = (`orig_remote' / `total_weighted') * 100
. }

. 
. display "• Fully In-Person: " %12.0fc `orig_inperson' " (" %5.2f `orig_pct_inperson' "%)"
• Fully In-Person:    1,166,228 (57.01%)

. display "• Hybrid: " %19.0fc `orig_hybrid' " (" %5.2f `orig_pct_hybrid' "%)"
• Hybrid:             463,818 (22.67%)

. display "• Fully Remote: " %15.0fc `orig_remote' " (" %5.2f `orig_pct_remote' "%)"
• Fully Remote:         415,689 (20.32%)

. 
. local orig_total_remote = `orig_hybrid' + `orig_remote'

. if `orig_total_remote' > 0 {
.     local orig_pct_hybrid_remote = (`orig_hybrid' / `orig_total_remote') * 100
.     local orig_pct_full_remote = (`orig_remote' / `orig_total_remote') * 100
.     
.     display "Among remote workers:"
Among remote workers:
.     display "  - Hybrid: " %5.2f `orig_pct_hybrid_remote' "% | Fully Remote: " %5.2f `orig_pct_full_remote' "%"
  - Hybrid: 52.74% | Fully Remote: 47.26%
. }

. 
. // Calibrated imputation statistics (weighted)
. display ""


. display "CALIBRATED IMPUTATION STATISTICS (WEIGHTED):"
CALIBRATED IMPUTATION STATISTICS (WEIGHTED):

. display "{hline 47}"
-----------------------------------------------

. 
. if "`weight_opt'" != "" {
.     quietly summarize `weight_opt' if alpha_final_calibrated == 0
.     local calib_inperson = r(sum)
.     local calib_pct_inperson = (`calib_inperson' / `total_weighted') * 100
. 
.     quietly summarize `weight_opt' if alpha_final_calibrated > 0 & alpha_final_calibrated < 1
.     local calib_hybrid = r(sum)
.     local calib_pct_hybrid = (`calib_hybrid' / `total_weighted') * 100
. 
.     quietly summarize `weight_opt' if alpha_final_calibrated == 1
.     local calib_remote = r(sum)
.     local calib_pct_remote = (`calib_remote' / `total_weighted') * 100
. }

. else {
.     count if alpha_final_calibrated == 0
  1,694,035
.     local calib_inperson = r(N)
.     local calib_pct_inperson = (`calib_inperson' / `total_weighted') * 100
. 
.     count if alpha_final_calibrated > 0 & alpha_final_calibrated < 1
  203,297
.     local calib_hybrid = r(N)
.     local calib_pct_hybrid = (`calib_hybrid' / `total_weighted') * 100
. 
.     count if alpha_final_calibrated == 1
  148,403
.     local calib_remote = r(N)
.     local calib_pct_remote = (`calib_remote' / `total_weighted') * 100
. }

. 
. display "• Fully In-Person: " %12.0fc `calib_inperson' " (" %5.2f `calib_pct_inperson' "%)"
• Fully In-Person:    1,694,035 (82.81%)

. display "• Hybrid: " %19.0fc `calib_hybrid' " (" %5.2f `calib_pct_hybrid' "%)"
• Hybrid:             203,297 ( 9.94%)

. display "• Fully Remote: " %15.0fc `calib_remote' " (" %5.2f `calib_pct_remote' "%)"
• Fully Remote:         148,403 ( 7.25%)

. 
. local calib_total_remote = `calib_hybrid' + `calib_remote'

. if `calib_total_remote' > 0 {
.     local calib_pct_hybrid_remote = (`calib_hybrid' / `calib_total_remote') * 100
.     local calib_pct_full_remote = (`calib_remote' / `calib_total_remote') * 100
.     
.     display "Among remote workers:"
Among remote workers:
.     display "  - Hybrid: " %5.2f `calib_pct_hybrid_remote' "% | Fully Remote: " %5.2f `calib_pct_full_remote' "%"
  - Hybrid: 57.80% | Fully Remote: 42.20%
. }

. 
. // Remote work hours comparison (weighted)
. display ""


. display "REMOTE WORK HOURS COMPARISON (40-hour work week, weighted):"
REMOTE WORK HOURS COMPARISON (40-hour work week, weighted):

. display "{hline 65}"
-----------------------------------------------------------------

. 
. // Original hours
. gen orig_remote_hours = alpha_final * 40

. gen calib_remote_hours = alpha_final_calibrated * 40

. 
. if "`weight_opt'" != "" {
.     quietly mean orig_remote_hours [pweight=`weight_opt']
.     local orig_avg_all = _b[orig_remote_hours]
.     quietly mean orig_remote_hours [pweight=`weight_opt'] if alpha_final > 0
.     local orig_avg_remote = _b[orig_remote_hours]
.     quietly mean orig_remote_hours [pweight=`weight_opt'] if alpha_final > 0 & alpha_final < 1
.     local orig_avg_hybrid = _b[orig_remote_hours]
. 
.     // Calibrated hours
.     quietly mean calib_remote_hours [pweight=`weight_opt']
.     local calib_avg_all = _b[calib_remote_hours]
.     quietly mean calib_remote_hours [pweight=`weight_opt'] if alpha_final_calibrated > 0
.     local calib_avg_remote = _b[calib_remote_hours]
.     quietly mean calib_remote_hours [pweight=`weight_opt'] if alpha_final_calibrated > 0 & alpha_final_calibrated < 1
.     local calib_avg_hybrid = _b[calib_remote_hours]
. }

. else {
.     quietly mean orig_remote_hours
.     local orig_avg_all = _b[orig_remote_hours]
.     quietly mean orig_remote_hours if alpha_final > 0
.     local orig_avg_remote = _b[orig_remote_hours]
.     quietly mean orig_remote_hours if alpha_final > 0 & alpha_final < 1
.     local orig_avg_hybrid = _b[orig_remote_hours]
. 
.     // Calibrated hours
.     quietly mean calib_remote_hours
.     local calib_avg_all = _b[calib_remote_hours]
.     quietly mean calib_remote_hours if alpha_final_calibrated > 0
.     local calib_avg_remote = _b[calib_remote_hours]
.     quietly mean calib_remote_hours if alpha_final_calibrated > 0 & alpha_final_calibrated < 1
.     local calib_avg_hybrid = _b[calib_remote_hours]
. }

. 
. display "                          Original    Calibrated    Difference"
                          Original    Calibrated    Difference

. display "Economy-wide average:     " %8.2f `orig_avg_all' "     " %8.2f `calib_avg_all' "     " %8.2f (`calib_avg_all'
>  - `orig_avg_all')
Economy-wide average:        12.26         4.75        -7.51

. display "Among remote workers:     " %8.2f `orig_avg_remote' "     " %8.2f `calib_avg_remote' "     " %8.2f (`calib_av
> g_remote' - `orig_avg_remote')
Among remote workers:        28.52        27.63        -0.89

. display "Among hybrid workers:     " %8.2f `orig_avg_hybrid' "     " %8.2f `calib_avg_hybrid' "     " %8.2f (`calib_av
> g_hybrid' - `orig_avg_hybrid')
Among hybrid workers:        18.24        18.61         0.37

. 
. // Percentage of time worked remotely (weighted)
. display ""


. display "PERCENTAGE OF TIME WORKED REMOTELY (WEIGHTED):"
PERCENTAGE OF TIME WORKED REMOTELY (WEIGHTED):

. display "{hline 50}"
--------------------------------------------------

. 
. local orig_pct_all = `orig_avg_all' / 40 * 100

. local orig_pct_remote = `orig_avg_remote' / 40 * 100

. local orig_pct_hybrid = `orig_avg_hybrid' / 40 * 100

. 
. local calib_pct_all = `calib_avg_all' / 40 * 100

. local calib_pct_remote = `calib_avg_remote' / 40 * 100

. local calib_pct_hybrid = `calib_avg_hybrid' / 40 * 100

. 
. display "                          Original    Calibrated    Difference"
                          Original    Calibrated    Difference

. display "Economy-wide:             " %7.2f `orig_pct_all' "%     " %7.2f `calib_pct_all' "%     " %7.2f (`calib_pct_al
> l' - `orig_pct_all') "%"
Economy-wide:               30.66%       11.88%      -18.78%

. display "Among remote workers:     " %7.2f `orig_pct_remote' "%     " %7.2f `calib_pct_remote' "%     " %7.2f (`calib_
> pct_remote' - `orig_pct_remote') "%"
Among remote workers:       71.31%       69.08%       -2.23%

. display "Among hybrid workers:     " %7.2f `orig_pct_hybrid' "%     " %7.2f `calib_pct_hybrid' "%     " %7.2f (`calib_
> pct_hybrid' - `orig_pct_hybrid') "%"
Among hybrid workers:       45.60%       46.52%        0.92%

. 
. // ACS Validation Statistics (weighted)
. display ""


. display "ACS VALIDATION REFERENCE (WEIGHTED):"
ACS VALIDATION REFERENCE (WEIGHTED):

. display "{hline 35}"
-----------------------------------

. 
. if "`weight_opt'" != "" {
.     quietly summarize `weight_opt' if wfh == 1
.     local acs_remote_count = r(sum)
.     local acs_remote_pct = (`acs_remote_count' / `total_weighted') * 100
. 
.     quietly summarize `weight_opt' if wfh == 0
.     local acs_inperson_count = r(sum)
.     local acs_inperson_pct = (`acs_inperson_count' / `total_weighted') * 100
. }

. else {
.     count if wfh == 1
  351,784
.     local acs_remote_count = r(N)
.     local acs_remote_pct = (`acs_remote_count' / `total_weighted') * 100
. 
.     count if wfh == 0
  1,693,951
.     local acs_inperson_count = r(N)
.     local acs_inperson_pct = (`acs_inperson_count' / `total_weighted') * 100
. }

. 
. display "• ACS Any Remote Work: " %12.0fc `acs_remote_count' " (" %5.2f `acs_remote_pct' "%)"
• ACS Any Remote Work:      351,784 (17.20%)

. display "• ACS Fully In-Person: " %12.0fc `acs_inperson_count' " (" %5.2f `acs_inperson_pct' "%)"
• ACS Fully In-Person:    1,693,951 (82.80%)

. 
. // Clean up temporary variables
. drop orig_remote_hours calib_remote_hours

. 
. display ""


. display "✓ Comparative work arrangement statistics completed (using weights where available)"
✓ Comparative work arrangement statistics completed (using weights where available)

. 
. // Close log file
. capture log close _all
